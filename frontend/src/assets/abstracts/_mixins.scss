
@mixin center() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate3d(-50%, -50%, 0);
}

// https://codyhouse.co/blog/post/how-to-combine-sass-color-functions-and-css-variables
@mixin defineColorHSL($color, $hue, $saturation, $lightness)
{
  #{$color}: unquote("hsl(#{$hue}, #{$saturation}, #{$lightness})");
  #{$color}-h: #{$hue};
  #{$color}-s: #{$saturation};
  #{$color}-l: #{$lightness};
}

@mixin alpha($property, $color-variable, $opacity)
{
  $color-variable-h: var(#{$color-variable+'-h'});
  $color-variable-s: var(#{$color-variable+'-s'});
  $color-variable-l: var(#{$color-variable+'-l'});
  #{$property}: hlsa(
    $color-variable-h,
    $color-variable-s,
    $color-variable-l,
    $opacity
  );
}

@mixin theme-box-animation($light-theme: true) {
  @if $light-theme {
    --scaleTo: scale(1.05);
  } @else {
    --scaleTo: scale(1.1);
  }
}

@function alpha($color, $opacity)
{
  $color: str-replace($color, 'var(');
  $color: str-replace($color, ')');
  $color-h: var(#{$color+'-h'});
  $color-s: var(#{$color+'-s'});
  $color-l: var(#{$color+'-l'});
  @return hsla($color-h, $color-s, $color-l, $opacity);
}

@function str-replace($string, $search, $replace: '')
{
  $index: str-index($string, $search);
  @if $index {
    @return str-slice(
      $string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)),
      $search,
      $replace
    );
  }
  @return $string;
}
