@mixin aberration {
    .chroma {
      position: absolute;
      color: white;
      margin: 0;
      line-height: 1;
  
      &::before, &::after {
        position: absolute;
        display: block;
        content: attr(data-before);
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: .8;
      }
  
      &::before {
        color: #f0f;
        z-index: -2;
        transform: translate(2px, -2px);
      }
  
      &::after {
        color: #0ff;
        z-index: -1;
        transform: translate(-2px, 2px);
      }
    }
  }
  
  @mixin cut-corners ($left-top, $right-top: 0px, $right-bottom: 0px, $left-bottom: 0px) {
    clip-path: polygon(
      $left-top 0%, 
      calc(100% - $right-top) 0%,
      100% $right-top,
      100% calc(100% - $right-bottom),
      calc(100% - $right-bottom) 100%,
      $left-bottom 100%,
      0% calc(100% - $left-bottom),
      0% $left-top);
  }
  
  @mixin center() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate3d(-50%, -50%, 0);
  }
  
  /* https://codyhouse.co/blog/post/how-to-combine-sass-color-functions-and-css-variables */
  @mixin defineColorHSL($color, $hue, $saturation, $lightness)
  {
    #{$color}: unquote("hsl(#{$hue}, #{$saturation}, #{$lightness})");
    #{$color}-h: #{$hue};
    #{$color}-s: #{$saturation};
    #{$color}-l: #{$lightness};
  }
  
  @mixin alpha($property, $color-variable, $opacity)
  {
    $color-variable-h: var(#{$color-variable+'-h'});
    $color-variable-s: var(#{$color-variable+'-s'});
    $color-variable-l: var(#{$color-variable+'-l'});
    #{$property}: hlsa(
      $color-variable-h,
      $color-variable-s,
      $color-variable-l,
      $opacity
    );
  }
  
  @mixin theme-box-animation($light-theme: true) {
    @if $light-theme {
      --scaleTo: scale(1.05);
    } @else {
      --scaleTo: scale(1.1);
    }
  }
  
  @function alpha($color, $opacity)
  {
    $color: str-replace($color, 'var(');
    $color: str-replace($color, ')');
    $color-h: var(#{$color+'-h'});
    $color-s: var(#{$color+'-s'});
    $color-l: var(#{$color+'-l'});
    @return hsla($color-h, $color-s, $color-l, $opacity);
  }
  
  @function str-replace($string, $search, $replace: '')
  {
    $index: str-index($string, $search);
    @if $index {
      @return str-slice(
        $string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
    }
    @return $string;
  }